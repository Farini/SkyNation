//
//  GameToken.swift
//  SkyNation
//
//  Created by Carlos Farini on 8/7/21.
//

import Foundation

/// The types of Token, to keep track of where they come from.
enum TokenType:String, Codable, CaseIterable {
    
    case Purchased
    case Freebie
    case Entry      // mars entry
    case Beginner   // Game Beginner's package
    case Promo      // Any promotion made
    
    /// Indicates whether player ID is also the one using. (or if it needs a playerID to check)
    var needsPlayerPass:Bool {
        switch self {
            case .Purchased, .Freebie, .Beginner: return true
            case .Entry, .Promo: return false
        }
    }
}

/// A Token generated by the game (or server)
struct GameToken:Codable {
    
    var id:UUID
    var date:Date
    var dbUser:UUID
    var origin:TokenType
    
    var usedDate:Date?
    var usedBy:UUID?
    
    // Game Freebies
    init(free pid:UUID) {
        self.id = UUID()
        self.date = Date()
        self.dbUser  = pid
        self.origin = .Freebie
    }
    
    // Purchases
    init(purchase:Purchase, userID:UUID) {
        // Validate purchase
        self.id = UUID()
        self.date = Date()
        self.dbUser = userID
        self.origin = .Purchased
    }
    
    // Entry (invite)
    init(entry pid:UUID) {
        self.id = UUID()
        self.date = Date()
        self.dbUser = pid
        self.origin = .Entry
    }
    
    // Beginner package
    init(beginner pid:UUID) {
        self.id = UUID()
        self.date = Date()
        self.dbUser = UUID()
        self.origin = .Beginner
    }
    
    // Gift
    init(donator:UUID, receiver:UUID, playerToken:GameToken) {
        self.id = playerToken.id
        self.date = Date()
        self.dbUser = donator
        self.origin = playerToken.origin
        
    }
    
    func validate(pid:UUID) -> Bool {
        if usedDate != nil { return false }
        
        if origin.needsPlayerPass == true {
            return pid == dbUser
        } else {
            return true
        }
    }
    
    static func createUsedCopy(token:inout GameToken) {
        token.usedDate = Date()
    }
}
